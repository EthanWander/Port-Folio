{"version":3,"sources":["Item.js","App.js","reportWebVitals.js","index.js"],"names":["Item","item","addItem","removeItem","newItem","setNewItem","list","useState","onForum","setOnForum","textInput","useRef","imgUrlInput","textColorInput","useEffect","text","textColor","imgUrl","key","Math","random","empty","className","style","backgroundImage","onClick","e","preventDefault","color","display","type","ref","id","autoComplete","ret","current","value","App","setItem","setList","lVis","setLVis","rVis","setRVis","index","setIndex","now","JSON","parse","localStorage","getItem","defaultItem","length","stringify","visibility","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d709dd4f.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n\nfunction Item({item, addItem, removeItem, newItem, list, setNewItem}) {\n  const [onForum, setOnForum] = useState(false);\n  const textInput = useRef(null);\n  const imgUrlInput = useRef(null);\n  const textColorInput = useRef(null);\n  \n  const setBG = () => {\n    return {backgroundImage: \"url(\"+item.imgUrl+\")\"};\n  }\n  \n  const isPlusBtnShown = () => {\n    if(onForum || !item.empty)\n      return {display: \"none\"};\n    return {display: \"inline-block\"}\n  }\n  \n  const plusBtnHandler = () => {\n    setOnForum(true);\n  }\n  \n  const handleCancelBtn = (e) => {\n    e.preventDefault();\n    setOnForum(false);\n  }\n  \n  const handleConfirmBtn = (e) => {\n    e.preventDefault();\n    let ret = newItem;\n    ret.imgUrl = imgUrlInput.current.value;\n    ret.text = textInput.current.value;\n    ret.textColor = textColorInput.current.value;\n    setNewItem(ret)\n    addItem();\n    setOnForum(false);\n  }\n  \n  const handleDelBtn = (e) => {\n    e.preventDefault();\n    removeItem();\n  }\n  \n  useEffect(() => {\n    setNewItem({text: null, textColor: null, imgUrl: null, key: Math.random()*100, empty: false});\n  }, [onForum])\n  \n  return(\n    <div className={item.empty ? \"empty-item\" : \"item\"} style={setBG()}>\n      <button className=\"delete-proj-btn\" onClick={handleDelBtn} style={{color: \"rgb(\"+item.textColor+\")\", display: item.empty ? \"none\" : \"inline-block\"}}>\n        <i className=\"fas fa-minus\"></i>\n      </button>\n      <div className=\"in-item\">\n      \n        <button onClick={plusBtnHandler} style={isPlusBtnShown()} className=\"plus-btn\">\n          <i className=\"fas fa-plus\"></i>\n        </button>\n        \n        <div className=\"proj-text\" style={{color: \"rgb(\"+item.textColor+\")\"}}>{item.text}</div>\n        \n        <form className=\"new-proj-form\" style={{display: onForum ? \"flex\" : \"none\"}}>\n          <div className=\"enter-url\">\n            Image URL: <input type=\"text\" ref={imgUrlInput} id=\"img-url-input\" autoComplete=\"off\"></input>\n          </div>\n          <div className=\"enter-text\">\n            Text: <input type=\"text\" ref={textInput} id=\"txt-input\" autoComplete=\"off\"></input>\n          </div>\n          <div className=\"enter-text-color\">\n            Text Color: rgb(<input type=\"text\" ref={textColorInput} autoComplete=\"off\" id=\"txt-color-input\"></input>)\n          </div>\n          <div className=\"forum-btns\">\n            <button id=\"cancel-proj\" onClick={handleCancelBtn}>Cancel</button>\n            <button id=\"confirm-proj\" onClick={handleConfirmBtn}>Confirm</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Item;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Item from './Item.js'\n\nfunction App() {\n  const [item, setItem] = useState({text: null, imgUrl: null, textColor: null, key: Math.random()*100, empty: true});\n  const [list, setList] = useState([item]);\n  const [lVis, setLVis] = useState(false);\n  const [rVis, setRVis] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [newItem, setNewItem] = useState({text: null, textColor: null, imgUrl: null, key: Math.random()*100, empty: false})\n  \n  const addItem = () => {\n    setList([\n      ...list.slice(0,list.length-1),\n      newItem,\n      list[list.length-1]\n    ])\n  }\n  \n  const removeItem = () => {\n    setList([...list.slice(0, index), ...list.slice(index + 1)]);\n  }\n  \n  const lClickHandler = (e) => {\n    if(index > 0) {\n      setItem(list[index-1]);\n      setIndex(index - 1);\n    }\n  }\n  const rClickHandler = (e) => {\n    if(index < list.length-1) {\n      setItem(list[index+1]);\n      setIndex(index + 1);\n    }\n  }\n  \n  const lVisHandler = () => {\n    return lVis ? {visibility: \"visible\"} : {visibility: \"hidden\"};\n  }\n  const rVisHandler = () => {\n    return rVis ? {visibility: \"visible\"} : {visibility: \"hidden\"};\n  }\n  \n  useEffect(() => { // get local storage\n    let now = JSON.parse(localStorage.getItem('list'));\n    setList(JSON.parse(localStorage.getItem('list')));\n    let defaultItem = {\n      text: \"Lorem Ipsum\", \n      imgUrl: \"https://images.unsplash.com/photo-1579546929518-9e396f3cc809?ixlib=rb-1.2.1&w=1000&q=80\", \n      textColor: \"0,100,100\", \n      key: Math.random()*100, \n      empty: false\n    };\n    let empty = {\n      text: null, \n      imgUrl: null,\n      textColor: null, \n      key: Math.random()*100, \n      empty: true\n    }\n    if(now === null){\n      setList([defaultItem, empty])\n    }\n    else if(now.length === 0){\n      setList([defaultItem, empty])\n    }\n  },[])\n  \n  useEffect(() => {\n    if(index === list.length-1){\n      setRVis(false);\n    }\n    else \n      setRVis(true);\n    if(index === 0){\n      setLVis(false);\n    }\n    else setLVis(true);\n    setItem(list[index]);\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list, item]);\n  \n  return (\n    <div className=\"App\">\n      <header>Port Folio</header>\n      <div className=\"contain-list\">\n        <button onClick={lClickHandler} style={lVisHandler()} className=\"scroll-btn scroll-btn-left\"><i className=\"fas fa-angle-left\"></i></button>\n        <Item \n          removeItem={removeItem} \n          list={list} \n          newItem={newItem} \n          setNewItem={setNewItem} \n          addItem={addItem} \n          item={item}\n        />\n        <button onClick={rClickHandler} style={rVisHandler()} className=\"scroll-btn scroll-btn-right\"><i className=\"fas fa-angle-right\"></i></button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}